@import 'reset';
@import 'mixins';
@import 'animations';
@import url('https://fonts.googleapis.com/css?family=Rubik|Source+Code+Pro');

$brightwhite: #FFF;
$white:    #F7F7F7;
$grey00:   #EEEEEE;
$grey10:   #E5E5E5;
$grey20:   #D7D7D7;
$grey30:   #BABABA;
$grey40:   #AAAAAA;
$grey50:   #969696;
$grey70:   #6D6D6D;
$grey80:   #4C4C4C;
$grey90:   #333333;
$black:    #1B1B1B;
$deepblack:#101010;

$yellow40: #FFC800;
$yellow60: #DB9D23;
$yellow80: #C6890D;

$blue20:   #9CD1F4;
$blue40:   #4BB0F4;
$blue60:   #2890D4;

$evgreen:  #27DD7E;
$green40:  #26D67B;
$green50:  #1EC970;
$green60:  #1AB565;
$green70:  #12874B;
$green90:  #0C4427;

$red40:    #DE2626;
$red60:    #C01A19;

$font-family: 'Rubik', 'Open Sans', 'Helvetica', sans-serif;
$mono-font-family: 'Source Code Pro', monospace;
$base-font: 18px/24px $font-family;


body {
  color: $black;
  background: $white;
  font-family: $font-family;
  font-size: 16px;
  line-height: 1.75em;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
  display: flex;
  min-height: 100vh;
  min-width: 100vw;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

h1, h2, h3, h4, h5, h6 {
  font-family: $font-family;
}

h1 {
  font-size: 1.75em;
  line-height: 2.125em;
  position: relative;
  text-transform: capitalize;
}

h1.evaline {
  &::before {
    content: '';
    width: 2em;
    height: 2em;
    position: absolute;
    transform: translateY(-50%);
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    left: -0.5em;
    top: -1.5em;

    @include animation-delay(0.375s);
    @include animate(0.5s);
    @extend .fadeInLeft;
  }

  &.happy::before {
    background-image: url('../media/evaline-happy.png');
  }

  &.upset::before {
    background-image: url('../media/evaline-upset.png');
  }
}

p {
  color: $grey70;
  max-width: 20em;
  font-size: 1.25em;

  .no-break { white-space:nowrap; }

  a {
    color: $grey70;
    @include ease(0.25s);
    text-decoration: none;
    &:hover { color: $white; }
  }
}

svg { fill: red; }

header, section {
  padding: 2em;
  max-width: 32em;
  display: flex;
  margin: 0 auto;
  flex-shrink: 1;
  justify-content: flex-end;
  align-items: flex-start;
  flex-direction: column;
}

header {
  padding-top: 16vh;
  padding-bottom: 0;

  > * {
    @include animation-delay(0.25s);
    @include animate(0.5s);
    @extend .fadeInUp;
  }
}

section {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  justify-content: flex-start;
  flex-wrap: wrap;

  > * { // row
    display: flex;
    margin: 0;
    width: 100%;
    flex-direction: column;
    justify-content: flex-start;
    border-bottom: 1px solid $grey20;
    @include animate(0.25s);
    @extend .fadeInUp;

    &:last-of-type {
      border-bottom: none;
      margin-bottom: 10vh;
    }

    &:nth-of-type(1) { @include animation-delay(0.45s); }
    &:nth-of-type(2) { @include animation-delay(0.55s); }
    &:nth-of-type(3) { @include animation-delay(0.65s); }
    &:nth-of-type(4) { @include animation-delay(0.75s); }
    &:nth-of-type(5) { @include animation-delay(0.85s); }
    &:nth-of-type(6) { @include animation-delay(0.95s); }
    &:nth-of-type(7) { @include animation-delay(1.05s); }

    > * { // cell
      padding: 0.5em 0;
      font-family: $mono-font-family;
    }

    > *:first-of-type { // first-cell
      display: flex;
      padding-top: 1.5em;
      padding-left: 1.75em;

      &::before {
        background: $evgreen;
        content: '';
        width: 1em;
        height: 1em;
        position: absolute;
        border-radius: 0.5em;
        left: 0;
        top: 2em;
      }
    }

    > *:last-of-type { // last-cell
      padding-top: 0;
      padding-bottom: 1em;
      padding-left: 1.75em;
      display: flex;
      flex-grow: 1;
      align-self: stretch;
      position: relative;
      color: $grey70;
    }

    &:nth-of-type(odd) > *:first-of-type::after {
      background: $grey40;
    }

    &.error {
      > *:first-of-type::before { background: $red40; }
      > *:last-of-type { color: $red60; }
    }

    &.warning {
      > *:first-of-type::before { background: $yellow40; }
      > *:last-of-type { color: $yellow80; }
    }
  }
}

.button-row {
  margin-top: 0;
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  flex-direction: column;

  > a.button {
    cursor: pointer;
    position: relative;
    font-family: $mono-font-family;
    font-size: 1.125em;
    transform: translate3d(0, 0, 0);
    -webkit-transform: translate3d(0, 0, 0);
    @include shadow(0, 0, 0.5em, 0, rgba($black, 0));
    @include ease(0.25s);
    box-sizing: border-box;
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    flex-grow: 0;
    flex-shrink: 1;
    text-decoration: none;
    border-radius: 2px;
    padding: 0.5em 1.5em;
    background: $black;
    color: $white;

    svg {
      height: 1em;
      width: 1em;
      fill: $grey70;
    }

    &:nth-of-type(n + 1) { margin-top: 1em; }

    &:hover {
      @include shadow(0, 0.1em, 0.5em, 0, rgba($black, 0.25));
      transform: translate3d(0, -0.1em, 0);
      -webkit-transform: translate3d(0, -0.1em, 0);
      background: $grey90;
    }

    &:active {
      @include ease(0.1s);
      @include shadow(0, 0, 0.25em, 0, rgba($black, 0.125));
      transform: translate3d(0, 0.1em, 0);
      -webkit-transform: translate3d(0, 0.1em, 0);
      background: $grey80;
    }

    @extend .fadeInUp;
    animation-duration: 0.25s;
    animation-fill-mode: backwards;
    -webkit-animation-duration: 0.25s;
    -webkit-animation-fill-mode: backwards;
    &:nth-of-type(1) { @include animation-delay(0.35s) }
    &:nth-of-type(2) { @include animation-delay(0.40s) }
    &:nth-of-type(3) { @include animation-delay(0.45s) }
    &:nth-of-type(4) { @include animation-delay(0.50s) }
  }
}

@media (min-width: 900px) {
  header { padding: 20vh 2em 2em 2em; }
  header, section { width: 32em; }
  .button-row {
    margin-top: 1em;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    a.button + a.button { margin-left: 1em; }
  }

  h1 { font-size: 2em; }

  h1.evaline::before {
    position: absolute;
    top: calc(50% - 1em);
    left: -2.25em;
  }
}
